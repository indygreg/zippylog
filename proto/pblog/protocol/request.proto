// this file describes protocol buffer messages sent by the client when
// communicating with a pblog server

import "pblog/protocol.proto";

package pblog.protocol.request;

// requesting status of the pblog server's store
message StoreInfo {

}

// start streaming events as they hit the remote store
// this is not reliable
message Stream {
    // list of paths to subscribe to
    // string value is a store path (e.g. '/bucket/set')
    repeated string path = 1;
}

// download stream(s) from the server
// once accepted, the server acks via a Get response message
// next, the server sends a bunch of envelopes as separate 0MQ messages
message Get {
    // list of streams to get
    // each includes metadata on how to get it
    repeated GetStreamDescription stream = 1;

    // tells the server how many bytes you would like in each response
    // message set. normally, the default value will be sufficient. in some
    // situations, it may be desirable to adjust this for better performance
    optional uint32 bytes_per_response = 2 [default=65535];
}
