
// this file contains messages generated by zippylogd
// some messages are used internally
// others are written to zippylogd's own zippylog stream
package zippylog.zippylogd;

// -------------------
// Broker Log Events |
// -------------------

message BrokerStartup {
    optional bytes id = 1;

    // path to store broker bound to
    optional string store_path = 2;

    // list of endpoints to which broker is listening for requests
    repeated string listen_endpoints = 3;
}

// dropped when broker stops
message BrokerShutdown {
    optional bytes id = 1;
}

// when a 0MQ message is received by the broker
message BrokerReceiveClientMessage {

}

message BrokerFlushOutputStreams {
    optional bytes id = 1;
}


// --------------------|
// Streamer Log Events |
// --------------------|

message StreamerStartup {
    optional bytes id = 1;
}

message StreamerShutdown {
    optional bytes id = 1;
}

// when a subscription expires
message StreamerSubscriptionExpired {
    // unique identifier of streamer
    optional bytes id = 1;

    // id of subscription that expired
    optional bytes subscription = 2;
}

// when a streamer receives a keepalive message
// keepalives are sent to all streamers, so all should drop this event
message StreamerReceiveKeepalive {
    // unique identifier of streamer
    optional bytes id = 1;

    optional bytes subscription = 2;
}

// when a streamer successfully renews a subscription from a keepalive
message StreamerSubscriptionRenewedFromKeepalive {
    // unique identifier of streamer
    optional bytes id = 1;

    optional bytes subscription = 2;
}

// when a stream rejects a keepalive due to unknown subscription id
message StreamerRejectKeepaliveUnknownSubscription {
    // unique identifier of streamer
    optional bytes id = 1;

    optional bytes subscription = 2;
}

message StreamerErrorRenewingSubscription {
    // unique identifier of streamer
    optional bytes id = 1;

    optional bytes subscription = 2;
}

// -------------------------|
// Store Watcher Log Events |
// -------------------------|

message StoreWatcherStartup {
    optional bytes id = 1;
}

message StoreWatcherShutdown {
    optional bytes id = 1;
}