// this file describes protocol buffer messages sent by the client when
// communicating with a zippylog server
package zippylog.protocol.request;

// requesting status of the zippylog server's store
message StoreInfo { }

// request to download part of a stream
message Get {
    // path of stream to retrieve
    optional string path = 1;

    // offset from start of stream from which to start sending data
    // this value has different meaning depending on the backing store of the
    // remote store. for filesystem stores, it likely corresponds to a byte
    // offset within a remote file
    optional uint64 start_offset = 2;

    // maximum number of bytes to send in response
    optional uint32 max_response_bytes = 3;

    // TODO support max events
}

// subscribes the client to store changes
// store changes describe changes to the store. this covers creating, deletion,
// and modification of buckets, stream sets, and streams. it does not include
// actual envelopes in streams
message SubscribeStoreChanges {

    // list of store paths to subscribe to
    // if you want to subscribe to the entire store, add the value "/"
    repeated string path = 1;
}

// clients need to send keepalive messages every N seconds or the server drops
// the subscription. this is that keepalive message
message SubscribeKeepalive {
    // the subscription identifier to send the keepalive for
    // this identifier is issued by the server when it accepts the
    // subscription
    optional bytes id = 1;
}

// cancels a subscription
message SubscribeCancel {
    // subscription identifier to cancel
    optional bytes id = 1;
}