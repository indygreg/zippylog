// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pblog/protocol/request.proto

#ifndef PROTOBUF_pblog_2fprotocol_2frequest_2eproto__INCLUDED
#define PROTOBUF_pblog_2fprotocol_2frequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include <pblog/envelope.hpp>
// @@protoc_insertion_point(includes)

namespace pblog {
namespace protocol {
namespace request {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_pblog_2fprotocol_2frequest_2eproto();
void protobuf_AssignDesc_pblog_2fprotocol_2frequest_2eproto();
void protobuf_ShutdownFile_pblog_2fprotocol_2frequest_2eproto();

class StoreInfo;
class Stream;
class Get;

// ===================================================================

class StoreInfo : public ::google::protobuf::Message {
 public:
  StoreInfo();
  virtual ~StoreInfo();
  
  StoreInfo(const StoreInfo& from);
  
  inline StoreInfo& operator=(const StoreInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreInfo& default_instance();
  
  void Swap(StoreInfo* other);
  
  // implements Message ----------------------------------------------
  
  StoreInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreInfo& from);
  void MergeFrom(const StoreInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  static const ::google::protobuf::uint32 pblog_namespace = 1;
  static const ::google::protobuf::uint32 pblog_enumeration = 8;
  // @@protoc_insertion_point(class_scope:pblog.protocol.request.StoreInfo)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_pblog_2fprotocol_2frequest_2eproto();
  friend void protobuf_AssignDesc_pblog_2fprotocol_2frequest_2eproto();
  friend void protobuf_ShutdownFile_pblog_2fprotocol_2frequest_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static StoreInfo* default_instance_;
};
// -------------------------------------------------------------------

class Stream : public ::google::protobuf::Message {
 public:
  Stream();
  virtual ~Stream();
  
  Stream(const Stream& from);
  
  inline Stream& operator=(const Stream& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stream& default_instance();
  
  void Swap(Stream* other);
  
  // implements Message ----------------------------------------------
  
  Stream* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Stream& from);
  void MergeFrom(const Stream& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string path = 1;
  inline int path_size() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline const ::std::string& path(int index) const;
  inline ::std::string* mutable_path(int index);
  inline void set_path(int index, const ::std::string& value);
  inline void set_path(int index, const char* value);
  inline void set_path(int index, const char* value, size_t size);
  inline ::std::string* add_path();
  inline void add_path(const ::std::string& value);
  inline void add_path(const char* value);
  inline void add_path(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& path() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_path();
  
  static const ::google::protobuf::uint32 pblog_namespace = 1;
  static const ::google::protobuf::uint32 pblog_enumeration = 9;
  // @@protoc_insertion_point(class_scope:pblog.protocol.request.Stream)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> path_;
  friend void  protobuf_AddDesc_pblog_2fprotocol_2frequest_2eproto();
  friend void protobuf_AssignDesc_pblog_2fprotocol_2frequest_2eproto();
  friend void protobuf_ShutdownFile_pblog_2fprotocol_2frequest_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Stream* default_instance_;
};
// -------------------------------------------------------------------

class Get : public ::google::protobuf::Message {
 public:
  Get();
  virtual ~Get();
  
  Get(const Get& from);
  
  inline Get& operator=(const Get& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Get& default_instance();
  
  void Swap(Get* other);
  
  // implements Message ----------------------------------------------
  
  Get* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Get& from);
  void MergeFrom(const Get& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string path = 1;
  inline int path_size() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline const ::std::string& path(int index) const;
  inline ::std::string* mutable_path(int index);
  inline void set_path(int index, const ::std::string& value);
  inline void set_path(int index, const char* value);
  inline void set_path(int index, const char* value, size_t size);
  inline ::std::string* add_path();
  inline void add_path(const ::std::string& value);
  inline void add_path(const char* value);
  inline void add_path(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& path() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_path();
  
  // repeated uint64 stream_offset = 2;
  inline int stream_offset_size() const;
  inline void clear_stream_offset();
  static const int kStreamOffsetFieldNumber = 2;
  inline ::google::protobuf::uint64 stream_offset(int index) const;
  inline void set_stream_offset(int index, ::google::protobuf::uint64 value);
  inline void add_stream_offset(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      stream_offset() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_stream_offset();
  
  static const ::google::protobuf::uint32 pblog_namespace = 1;
  static const ::google::protobuf::uint32 pblog_enumeration = 10;
  // @@protoc_insertion_point(class_scope:pblog.protocol.request.Get)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> path_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > stream_offset_;
  friend void  protobuf_AddDesc_pblog_2fprotocol_2frequest_2eproto();
  friend void protobuf_AssignDesc_pblog_2fprotocol_2frequest_2eproto();
  friend void protobuf_ShutdownFile_pblog_2fprotocol_2frequest_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Get* default_instance_;
};
// ===================================================================


// ===================================================================

// StoreInfo

// -------------------------------------------------------------------

// Stream

// repeated string path = 1;
inline int Stream::path_size() const {
  return path_.size();
}
inline void Stream::clear_path() {
  path_.Clear();
}
inline const ::std::string& Stream::path(int index) const {
  return path_.Get(index);
}
inline ::std::string* Stream::mutable_path(int index) {
  return path_.Mutable(index);
}
inline void Stream::set_path(int index, const ::std::string& value) {
  path_.Mutable(index)->assign(value);
}
inline void Stream::set_path(int index, const char* value) {
  path_.Mutable(index)->assign(value);
}
inline void Stream::set_path(int index, const char* value, size_t size) {
  path_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Stream::add_path() {
  return path_.Add();
}
inline void Stream::add_path(const ::std::string& value) {
  path_.Add()->assign(value);
}
inline void Stream::add_path(const char* value) {
  path_.Add()->assign(value);
}
inline void Stream::add_path(const char* value, size_t size) {
  path_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Stream::path() const {
  return path_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Stream::mutable_path() {
  return &path_;
}

// -------------------------------------------------------------------

// Get

// repeated string path = 1;
inline int Get::path_size() const {
  return path_.size();
}
inline void Get::clear_path() {
  path_.Clear();
}
inline const ::std::string& Get::path(int index) const {
  return path_.Get(index);
}
inline ::std::string* Get::mutable_path(int index) {
  return path_.Mutable(index);
}
inline void Get::set_path(int index, const ::std::string& value) {
  path_.Mutable(index)->assign(value);
}
inline void Get::set_path(int index, const char* value) {
  path_.Mutable(index)->assign(value);
}
inline void Get::set_path(int index, const char* value, size_t size) {
  path_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Get::add_path() {
  return path_.Add();
}
inline void Get::add_path(const ::std::string& value) {
  path_.Add()->assign(value);
}
inline void Get::add_path(const char* value) {
  path_.Add()->assign(value);
}
inline void Get::add_path(const char* value, size_t size) {
  path_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Get::path() const {
  return path_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Get::mutable_path() {
  return &path_;
}

// repeated uint64 stream_offset = 2;
inline int Get::stream_offset_size() const {
  return stream_offset_.size();
}
inline void Get::clear_stream_offset() {
  stream_offset_.Clear();
}
inline ::google::protobuf::uint64 Get::stream_offset(int index) const {
  return stream_offset_.Get(index);
}
inline void Get::set_stream_offset(int index, ::google::protobuf::uint64 value) {
  stream_offset_.Set(index, value);
}
inline void Get::add_stream_offset(::google::protobuf::uint64 value) {
  stream_offset_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Get::stream_offset() const {
  return stream_offset_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Get::mutable_stream_offset() {
  return &stream_offset_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace request
}  // namespace protocol
}  // namespace pblog

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pblog_2fprotocol_2frequest_2eproto__INCLUDED
