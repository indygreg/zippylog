// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pblog/pblogd.proto

#ifndef PROTOBUF_pblog_2fpblogd_2eproto__INCLUDED
#define PROTOBUF_pblog_2fpblogd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "pblog/protocol.pb.h"
#include <pblog/envelope.hpp>
// @@protoc_insertion_point(includes)

namespace pblog {
namespace pblogd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_pblog_2fpblogd_2eproto();
void protobuf_AssignDesc_pblog_2fpblogd_2eproto();
void protobuf_ShutdownFile_pblog_2fpblogd_2eproto();

class GetRequest;

// ===================================================================

class GetRequest : public ::google::protobuf::Message {
 public:
  GetRequest();
  virtual ~GetRequest();
  
  GetRequest(const GetRequest& from);
  
  inline GetRequest& operator=(const GetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRequest& default_instance();
  
  void Swap(GetRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRequest& from);
  void MergeFrom(const GetRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .pblog.protocol.GetStreamDescription stream = 1;
  inline int stream_size() const;
  inline void clear_stream();
  static const int kStreamFieldNumber = 1;
  inline const ::pblog::protocol::GetStreamDescription& stream(int index) const;
  inline ::pblog::protocol::GetStreamDescription* mutable_stream(int index);
  inline ::pblog::protocol::GetStreamDescription* add_stream();
  inline const ::google::protobuf::RepeatedPtrField< ::pblog::protocol::GetStreamDescription >&
      stream() const;
  inline ::google::protobuf::RepeatedPtrField< ::pblog::protocol::GetStreamDescription >*
      mutable_stream();
  
  // optional uint32 bytes_per_response = 2;
  inline bool has_bytes_per_response() const;
  inline void clear_bytes_per_response();
  static const int kBytesPerResponseFieldNumber = 2;
  inline ::google::protobuf::uint32 bytes_per_response() const;
  inline void set_bytes_per_response(::google::protobuf::uint32 value);
  
  // repeated bytes socket_identity = 3;
  inline int socket_identity_size() const;
  inline void clear_socket_identity();
  static const int kSocketIdentityFieldNumber = 3;
  inline const ::std::string& socket_identity(int index) const;
  inline ::std::string* mutable_socket_identity(int index);
  inline void set_socket_identity(int index, const ::std::string& value);
  inline void set_socket_identity(int index, const char* value);
  inline void set_socket_identity(int index, const void* value, size_t size);
  inline ::std::string* add_socket_identity();
  inline void add_socket_identity(const ::std::string& value);
  inline void add_socket_identity(const char* value);
  inline void add_socket_identity(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& socket_identity() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_socket_identity();
  
  static const ::google::protobuf::uint32 pblog_namespace = 1;
  static const ::google::protobuf::uint32 pblog_enumeration = 6;
  bool add_to_envelope(::pblog::Envelope *envelope);
  // @@protoc_insertion_point(class_scope:pblog.pblogd.GetRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::pblog::protocol::GetStreamDescription > stream_;
  ::google::protobuf::uint32 bytes_per_response_;
  ::google::protobuf::RepeatedPtrField< ::std::string> socket_identity_;
  friend void  protobuf_AddDesc_pblog_2fpblogd_2eproto();
  friend void protobuf_AssignDesc_pblog_2fpblogd_2eproto();
  friend void protobuf_ShutdownFile_pblog_2fpblogd_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static GetRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// GetRequest

// repeated .pblog.protocol.GetStreamDescription stream = 1;
inline int GetRequest::stream_size() const {
  return stream_.size();
}
inline void GetRequest::clear_stream() {
  stream_.Clear();
}
inline const ::pblog::protocol::GetStreamDescription& GetRequest::stream(int index) const {
  return stream_.Get(index);
}
inline ::pblog::protocol::GetStreamDescription* GetRequest::mutable_stream(int index) {
  return stream_.Mutable(index);
}
inline ::pblog::protocol::GetStreamDescription* GetRequest::add_stream() {
  return stream_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pblog::protocol::GetStreamDescription >&
GetRequest::stream() const {
  return stream_;
}
inline ::google::protobuf::RepeatedPtrField< ::pblog::protocol::GetStreamDescription >*
GetRequest::mutable_stream() {
  return &stream_;
}

// optional uint32 bytes_per_response = 2;
inline bool GetRequest::has_bytes_per_response() const {
  return _has_bit(1);
}
inline void GetRequest::clear_bytes_per_response() {
  bytes_per_response_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 GetRequest::bytes_per_response() const {
  return bytes_per_response_;
}
inline void GetRequest::set_bytes_per_response(::google::protobuf::uint32 value) {
  _set_bit(1);
  bytes_per_response_ = value;
}

// repeated bytes socket_identity = 3;
inline int GetRequest::socket_identity_size() const {
  return socket_identity_.size();
}
inline void GetRequest::clear_socket_identity() {
  socket_identity_.Clear();
}
inline const ::std::string& GetRequest::socket_identity(int index) const {
  return socket_identity_.Get(index);
}
inline ::std::string* GetRequest::mutable_socket_identity(int index) {
  return socket_identity_.Mutable(index);
}
inline void GetRequest::set_socket_identity(int index, const ::std::string& value) {
  socket_identity_.Mutable(index)->assign(value);
}
inline void GetRequest::set_socket_identity(int index, const char* value) {
  socket_identity_.Mutable(index)->assign(value);
}
inline void GetRequest::set_socket_identity(int index, const void* value, size_t size) {
  socket_identity_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetRequest::add_socket_identity() {
  return socket_identity_.Add();
}
inline void GetRequest::add_socket_identity(const ::std::string& value) {
  socket_identity_.Add()->assign(value);
}
inline void GetRequest::add_socket_identity(const char* value) {
  socket_identity_.Add()->assign(value);
}
inline void GetRequest::add_socket_identity(const void* value, size_t size) {
  socket_identity_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetRequest::socket_identity() const {
  return socket_identity_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetRequest::mutable_socket_identity() {
  return &socket_identity_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pblogd
}  // namespace pblog

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pblog_2fpblogd_2eproto__INCLUDED
