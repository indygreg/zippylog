// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "zippylog/protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zippylog {
namespace protocol {

namespace {

const ::google::protobuf::Descriptor* StreamInfoV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamInfoV1_reflection_ = NULL;
const ::google::protobuf::Descriptor* StreamSetInfoV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StreamSetInfoV1_reflection_ = NULL;
const ::google::protobuf::Descriptor* BucketInfoV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BucketInfoV1_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreInfoV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreInfoV1_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreChangeStreamAddedV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreChangeStreamAddedV1_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreChangeStreamDeletedV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreChangeStreamDeletedV1_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreChangeStreamAppendedV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreChangeStreamAppendedV1_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreChangeBucketAddedV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreChangeBucketAddedV1_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreChangeBucketDeletedV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreChangeBucketDeletedV1_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreChangeStreamSetAddedV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreChangeStreamSetAddedV1_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreChangeStreamSetDeletedV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreChangeStreamSetDeletedV1_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_zippylog_2fprotocol_2eproto() {
  protobuf_AddDesc_zippylog_2fprotocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "zippylog/protocol.proto");
  GOOGLE_CHECK(file != NULL);
  StreamInfoV1_descriptor_ = file->message_type(0);
  static const int StreamInfoV1_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamInfoV1, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamInfoV1, length_),
  };
  StreamInfoV1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamInfoV1_descriptor_,
      StreamInfoV1::default_instance_,
      StreamInfoV1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamInfoV1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamInfoV1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamInfoV1));
  StreamSetInfoV1_descriptor_ = file->message_type(1);
  static const int StreamSetInfoV1_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamSetInfoV1, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamSetInfoV1, stream_),
  };
  StreamSetInfoV1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StreamSetInfoV1_descriptor_,
      StreamSetInfoV1::default_instance_,
      StreamSetInfoV1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamSetInfoV1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StreamSetInfoV1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StreamSetInfoV1));
  BucketInfoV1_descriptor_ = file->message_type(2);
  static const int BucketInfoV1_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketInfoV1, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketInfoV1, stream_set_),
  };
  BucketInfoV1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BucketInfoV1_descriptor_,
      BucketInfoV1::default_instance_,
      BucketInfoV1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketInfoV1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketInfoV1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BucketInfoV1));
  StoreInfoV1_descriptor_ = file->message_type(3);
  static const int StoreInfoV1_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreInfoV1, bucket_),
  };
  StoreInfoV1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StoreInfoV1_descriptor_,
      StoreInfoV1::default_instance_,
      StoreInfoV1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreInfoV1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreInfoV1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StoreInfoV1));
  StoreChangeStreamAddedV1_descriptor_ = file->message_type(4);
  static const int StoreChangeStreamAddedV1_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamAddedV1, bucket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamAddedV1, stream_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamAddedV1, stream_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamAddedV1, length_),
  };
  StoreChangeStreamAddedV1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StoreChangeStreamAddedV1_descriptor_,
      StoreChangeStreamAddedV1::default_instance_,
      StoreChangeStreamAddedV1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamAddedV1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamAddedV1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StoreChangeStreamAddedV1));
  StoreChangeStreamDeletedV1_descriptor_ = file->message_type(5);
  static const int StoreChangeStreamDeletedV1_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamDeletedV1, bucket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamDeletedV1, stream_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamDeletedV1, stream_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamDeletedV1, length_),
  };
  StoreChangeStreamDeletedV1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StoreChangeStreamDeletedV1_descriptor_,
      StoreChangeStreamDeletedV1::default_instance_,
      StoreChangeStreamDeletedV1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamDeletedV1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamDeletedV1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StoreChangeStreamDeletedV1));
  StoreChangeStreamAppendedV1_descriptor_ = file->message_type(6);
  static const int StoreChangeStreamAppendedV1_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamAppendedV1, bucket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamAppendedV1, stream_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamAppendedV1, stream_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamAppendedV1, length_),
  };
  StoreChangeStreamAppendedV1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StoreChangeStreamAppendedV1_descriptor_,
      StoreChangeStreamAppendedV1::default_instance_,
      StoreChangeStreamAppendedV1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamAppendedV1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamAppendedV1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StoreChangeStreamAppendedV1));
  StoreChangeBucketAddedV1_descriptor_ = file->message_type(7);
  static const int StoreChangeBucketAddedV1_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeBucketAddedV1, bucket_),
  };
  StoreChangeBucketAddedV1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StoreChangeBucketAddedV1_descriptor_,
      StoreChangeBucketAddedV1::default_instance_,
      StoreChangeBucketAddedV1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeBucketAddedV1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeBucketAddedV1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StoreChangeBucketAddedV1));
  StoreChangeBucketDeletedV1_descriptor_ = file->message_type(8);
  static const int StoreChangeBucketDeletedV1_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeBucketDeletedV1, bucket_),
  };
  StoreChangeBucketDeletedV1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StoreChangeBucketDeletedV1_descriptor_,
      StoreChangeBucketDeletedV1::default_instance_,
      StoreChangeBucketDeletedV1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeBucketDeletedV1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeBucketDeletedV1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StoreChangeBucketDeletedV1));
  StoreChangeStreamSetAddedV1_descriptor_ = file->message_type(9);
  static const int StoreChangeStreamSetAddedV1_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamSetAddedV1, bucket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamSetAddedV1, stream_set_),
  };
  StoreChangeStreamSetAddedV1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StoreChangeStreamSetAddedV1_descriptor_,
      StoreChangeStreamSetAddedV1::default_instance_,
      StoreChangeStreamSetAddedV1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamSetAddedV1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamSetAddedV1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StoreChangeStreamSetAddedV1));
  StoreChangeStreamSetDeletedV1_descriptor_ = file->message_type(10);
  static const int StoreChangeStreamSetDeletedV1_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamSetDeletedV1, bucket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamSetDeletedV1, stream_set_),
  };
  StoreChangeStreamSetDeletedV1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StoreChangeStreamSetDeletedV1_descriptor_,
      StoreChangeStreamSetDeletedV1::default_instance_,
      StoreChangeStreamSetDeletedV1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamSetDeletedV1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreChangeStreamSetDeletedV1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StoreChangeStreamSetDeletedV1));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_zippylog_2fprotocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamInfoV1_descriptor_, &StreamInfoV1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StreamSetInfoV1_descriptor_, &StreamSetInfoV1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BucketInfoV1_descriptor_, &BucketInfoV1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StoreInfoV1_descriptor_, &StoreInfoV1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StoreChangeStreamAddedV1_descriptor_, &StoreChangeStreamAddedV1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StoreChangeStreamDeletedV1_descriptor_, &StoreChangeStreamDeletedV1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StoreChangeStreamAppendedV1_descriptor_, &StoreChangeStreamAppendedV1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StoreChangeBucketAddedV1_descriptor_, &StoreChangeBucketAddedV1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StoreChangeBucketDeletedV1_descriptor_, &StoreChangeBucketDeletedV1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StoreChangeStreamSetAddedV1_descriptor_, &StoreChangeStreamSetAddedV1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StoreChangeStreamSetDeletedV1_descriptor_, &StoreChangeStreamSetDeletedV1::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_zippylog_2fprotocol_2eproto() {
  delete StreamInfoV1::default_instance_;
  delete StreamInfoV1_reflection_;
  delete StreamSetInfoV1::default_instance_;
  delete StreamSetInfoV1_reflection_;
  delete BucketInfoV1::default_instance_;
  delete BucketInfoV1_reflection_;
  delete StoreInfoV1::default_instance_;
  delete StoreInfoV1_reflection_;
  delete StoreChangeStreamAddedV1::default_instance_;
  delete StoreChangeStreamAddedV1_reflection_;
  delete StoreChangeStreamDeletedV1::default_instance_;
  delete StoreChangeStreamDeletedV1_reflection_;
  delete StoreChangeStreamAppendedV1::default_instance_;
  delete StoreChangeStreamAppendedV1_reflection_;
  delete StoreChangeBucketAddedV1::default_instance_;
  delete StoreChangeBucketAddedV1_reflection_;
  delete StoreChangeBucketDeletedV1::default_instance_;
  delete StoreChangeBucketDeletedV1_reflection_;
  delete StoreChangeStreamSetAddedV1::default_instance_;
  delete StoreChangeStreamSetAddedV1_reflection_;
  delete StoreChangeStreamSetDeletedV1::default_instance_;
  delete StoreChangeStreamSetDeletedV1_reflection_;
}

void protobuf_AddDesc_zippylog_2fprotocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027zippylog/protocol.proto\022\021zippylog.prot"
    "ocol\",\n\014StreamInfoV1\022\014\n\004path\030\001 \002(\t\022\016\n\006le"
    "ngth\030\002 \001(\004\"P\n\017StreamSetInfoV1\022\014\n\004path\030\001 "
    "\002(\t\022/\n\006stream\030\002 \003(\0132\037.zippylog.protocol."
    "StreamInfoV1\"T\n\014BucketInfoV1\022\014\n\004path\030\001 \002"
    "(\t\0226\n\nstream_set\030\002 \003(\0132\".zippylog.protoc"
    "ol.StreamSetInfoV1\">\n\013StoreInfoV1\022/\n\006buc"
    "ket\030\001 \003(\0132\037.zippylog.protocol.BucketInfo"
    "V1\"^\n\030StoreChangeStreamAddedV1\022\016\n\006bucket"
    "\030\001 \002(\t\022\022\n\nstream_set\030\002 \002(\t\022\016\n\006stream\030\003 \002"
    "(\t\022\016\n\006length\030\004 \001(\004\"`\n\032StoreChangeStreamD"
    "eletedV1\022\016\n\006bucket\030\001 \002(\t\022\022\n\nstream_set\030\002"
    " \002(\t\022\016\n\006stream\030\003 \002(\t\022\016\n\006length\030\004 \001(\004\"a\n\033"
    "StoreChangeStreamAppendedV1\022\016\n\006bucket\030\001 "
    "\002(\t\022\022\n\nstream_set\030\002 \002(\t\022\016\n\006stream\030\003 \002(\t\022"
    "\016\n\006length\030\004 \001(\004\"*\n\030StoreChangeBucketAdde"
    "dV1\022\016\n\006bucket\030\001 \002(\t\",\n\032StoreChangeBucket"
    "DeletedV1\022\016\n\006bucket\030\002 \002(\t\"A\n\033StoreChange"
    "StreamSetAddedV1\022\016\n\006bucket\030\001 \002(\t\022\022\n\nstre"
    "am_set\030\002 \002(\t\"C\n\035StoreChangeStreamSetDele"
    "tedV1\022\016\n\006bucket\030\001 \002(\t\022\022\n\nstream_set\030\002 \002("
    "\t", 841);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zippylog/protocol.proto", &protobuf_RegisterTypes);
  StreamInfoV1::default_instance_ = new StreamInfoV1();
  StreamSetInfoV1::default_instance_ = new StreamSetInfoV1();
  BucketInfoV1::default_instance_ = new BucketInfoV1();
  StoreInfoV1::default_instance_ = new StoreInfoV1();
  StoreChangeStreamAddedV1::default_instance_ = new StoreChangeStreamAddedV1();
  StoreChangeStreamDeletedV1::default_instance_ = new StoreChangeStreamDeletedV1();
  StoreChangeStreamAppendedV1::default_instance_ = new StoreChangeStreamAppendedV1();
  StoreChangeBucketAddedV1::default_instance_ = new StoreChangeBucketAddedV1();
  StoreChangeBucketDeletedV1::default_instance_ = new StoreChangeBucketDeletedV1();
  StoreChangeStreamSetAddedV1::default_instance_ = new StoreChangeStreamSetAddedV1();
  StoreChangeStreamSetDeletedV1::default_instance_ = new StoreChangeStreamSetDeletedV1();
  StreamInfoV1::default_instance_->InitAsDefaultInstance();
  StreamSetInfoV1::default_instance_->InitAsDefaultInstance();
  BucketInfoV1::default_instance_->InitAsDefaultInstance();
  StoreInfoV1::default_instance_->InitAsDefaultInstance();
  StoreChangeStreamAddedV1::default_instance_->InitAsDefaultInstance();
  StoreChangeStreamDeletedV1::default_instance_->InitAsDefaultInstance();
  StoreChangeStreamAppendedV1::default_instance_->InitAsDefaultInstance();
  StoreChangeBucketAddedV1::default_instance_->InitAsDefaultInstance();
  StoreChangeBucketDeletedV1::default_instance_->InitAsDefaultInstance();
  StoreChangeStreamSetAddedV1::default_instance_->InitAsDefaultInstance();
  StoreChangeStreamSetDeletedV1::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_zippylog_2fprotocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_zippylog_2fprotocol_2eproto {
  StaticDescriptorInitializer_zippylog_2fprotocol_2eproto() {
    protobuf_AddDesc_zippylog_2fprotocol_2eproto();
  }
} static_descriptor_initializer_zippylog_2fprotocol_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int StreamInfoV1::kPathFieldNumber;
const int StreamInfoV1::kLengthFieldNumber;
#endif  // !_MSC_VER

StreamInfoV1::StreamInfoV1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StreamInfoV1::InitAsDefaultInstance() {
}

StreamInfoV1::StreamInfoV1(const StreamInfoV1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StreamInfoV1::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  length_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamInfoV1::~StreamInfoV1() {
  SharedDtor();
}

void StreamInfoV1::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void StreamInfoV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamInfoV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamInfoV1_descriptor_;
}

const StreamInfoV1& StreamInfoV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zippylog_2fprotocol_2eproto();  return *default_instance_;
}

StreamInfoV1* StreamInfoV1::default_instance_ = NULL;

StreamInfoV1* StreamInfoV1::New() const {
  return new StreamInfoV1;
}

void StreamInfoV1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
    length_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StreamInfoV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_length;
        break;
      }
      
      // optional uint64 length = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
          set_has_length();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StreamInfoV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }
  
  // optional uint64 length = 2;
  if (has_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->length(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StreamInfoV1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }
  
  // optional uint64 length = 2;
  if (has_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->length(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StreamInfoV1::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }
    
    // optional uint64 length = 2;
    if (has_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->length());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StreamInfoV1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StreamInfoV1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StreamInfoV1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StreamInfoV1::MergeFrom(const StreamInfoV1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
    if (from.has_length()) {
      set_length(from.length());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StreamInfoV1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamInfoV1::CopyFrom(const StreamInfoV1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamInfoV1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void StreamInfoV1::Swap(StreamInfoV1* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(length_, other->length_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StreamInfoV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamInfoV1_descriptor_;
  metadata.reflection = StreamInfoV1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StreamSetInfoV1::kPathFieldNumber;
const int StreamSetInfoV1::kStreamFieldNumber;
#endif  // !_MSC_VER

StreamSetInfoV1::StreamSetInfoV1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StreamSetInfoV1::InitAsDefaultInstance() {
}

StreamSetInfoV1::StreamSetInfoV1(const StreamSetInfoV1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StreamSetInfoV1::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StreamSetInfoV1::~StreamSetInfoV1() {
  SharedDtor();
}

void StreamSetInfoV1::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void StreamSetInfoV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamSetInfoV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StreamSetInfoV1_descriptor_;
}

const StreamSetInfoV1& StreamSetInfoV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zippylog_2fprotocol_2eproto();  return *default_instance_;
}

StreamSetInfoV1* StreamSetInfoV1::default_instance_ = NULL;

StreamSetInfoV1* StreamSetInfoV1::New() const {
  return new StreamSetInfoV1;
}

void StreamSetInfoV1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  stream_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StreamSetInfoV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stream;
        break;
      }
      
      // repeated .zippylog.protocol.StreamInfoV1 stream = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stream:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stream()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stream;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StreamSetInfoV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }
  
  // repeated .zippylog.protocol.StreamInfoV1 stream = 2;
  for (int i = 0; i < this->stream_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->stream(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StreamSetInfoV1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }
  
  // repeated .zippylog.protocol.StreamInfoV1 stream = 2;
  for (int i = 0; i < this->stream_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->stream(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StreamSetInfoV1::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }
    
  }
  // repeated .zippylog.protocol.StreamInfoV1 stream = 2;
  total_size += 1 * this->stream_size();
  for (int i = 0; i < this->stream_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->stream(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StreamSetInfoV1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StreamSetInfoV1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StreamSetInfoV1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StreamSetInfoV1::MergeFrom(const StreamSetInfoV1& from) {
  GOOGLE_CHECK_NE(&from, this);
  stream_.MergeFrom(from.stream_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StreamSetInfoV1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamSetInfoV1::CopyFrom(const StreamSetInfoV1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamSetInfoV1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < stream_size(); i++) {
    if (!this->stream(i).IsInitialized()) return false;
  }
  return true;
}

void StreamSetInfoV1::Swap(StreamSetInfoV1* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    stream_.Swap(&other->stream_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StreamSetInfoV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StreamSetInfoV1_descriptor_;
  metadata.reflection = StreamSetInfoV1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BucketInfoV1::kPathFieldNumber;
const int BucketInfoV1::kStreamSetFieldNumber;
#endif  // !_MSC_VER

BucketInfoV1::BucketInfoV1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BucketInfoV1::InitAsDefaultInstance() {
}

BucketInfoV1::BucketInfoV1(const BucketInfoV1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BucketInfoV1::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BucketInfoV1::~BucketInfoV1() {
  SharedDtor();
}

void BucketInfoV1::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void BucketInfoV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BucketInfoV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BucketInfoV1_descriptor_;
}

const BucketInfoV1& BucketInfoV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zippylog_2fprotocol_2eproto();  return *default_instance_;
}

BucketInfoV1* BucketInfoV1::default_instance_ = NULL;

BucketInfoV1* BucketInfoV1::New() const {
  return new BucketInfoV1;
}

void BucketInfoV1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  stream_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BucketInfoV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stream_set;
        break;
      }
      
      // repeated .zippylog.protocol.StreamSetInfoV1 stream_set = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stream_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stream_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stream_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BucketInfoV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }
  
  // repeated .zippylog.protocol.StreamSetInfoV1 stream_set = 2;
  for (int i = 0; i < this->stream_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->stream_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BucketInfoV1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }
  
  // repeated .zippylog.protocol.StreamSetInfoV1 stream_set = 2;
  for (int i = 0; i < this->stream_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->stream_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BucketInfoV1::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }
    
  }
  // repeated .zippylog.protocol.StreamSetInfoV1 stream_set = 2;
  total_size += 1 * this->stream_set_size();
  for (int i = 0; i < this->stream_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->stream_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BucketInfoV1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BucketInfoV1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BucketInfoV1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BucketInfoV1::MergeFrom(const BucketInfoV1& from) {
  GOOGLE_CHECK_NE(&from, this);
  stream_set_.MergeFrom(from.stream_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BucketInfoV1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BucketInfoV1::CopyFrom(const BucketInfoV1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BucketInfoV1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < stream_set_size(); i++) {
    if (!this->stream_set(i).IsInitialized()) return false;
  }
  return true;
}

void BucketInfoV1::Swap(BucketInfoV1* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    stream_set_.Swap(&other->stream_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BucketInfoV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BucketInfoV1_descriptor_;
  metadata.reflection = BucketInfoV1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StoreInfoV1::kBucketFieldNumber;
#endif  // !_MSC_VER

StoreInfoV1::StoreInfoV1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StoreInfoV1::InitAsDefaultInstance() {
}

StoreInfoV1::StoreInfoV1(const StoreInfoV1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StoreInfoV1::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StoreInfoV1::~StoreInfoV1() {
  SharedDtor();
}

void StoreInfoV1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StoreInfoV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreInfoV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreInfoV1_descriptor_;
}

const StoreInfoV1& StoreInfoV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zippylog_2fprotocol_2eproto();  return *default_instance_;
}

StoreInfoV1* StoreInfoV1::default_instance_ = NULL;

StoreInfoV1* StoreInfoV1::New() const {
  return new StoreInfoV1;
}

void StoreInfoV1::Clear() {
  bucket_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StoreInfoV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .zippylog.protocol.BucketInfoV1 bucket = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bucket:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bucket()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_bucket;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StoreInfoV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .zippylog.protocol.BucketInfoV1 bucket = 1;
  for (int i = 0; i < this->bucket_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bucket(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StoreInfoV1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .zippylog.protocol.BucketInfoV1 bucket = 1;
  for (int i = 0; i < this->bucket_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bucket(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StoreInfoV1::ByteSize() const {
  int total_size = 0;
  
  // repeated .zippylog.protocol.BucketInfoV1 bucket = 1;
  total_size += 1 * this->bucket_size();
  for (int i = 0; i < this->bucket_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bucket(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreInfoV1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StoreInfoV1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StoreInfoV1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StoreInfoV1::MergeFrom(const StoreInfoV1& from) {
  GOOGLE_CHECK_NE(&from, this);
  bucket_.MergeFrom(from.bucket_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StoreInfoV1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreInfoV1::CopyFrom(const StoreInfoV1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreInfoV1::IsInitialized() const {
  
  for (int i = 0; i < bucket_size(); i++) {
    if (!this->bucket(i).IsInitialized()) return false;
  }
  return true;
}

void StoreInfoV1::Swap(StoreInfoV1* other) {
  if (other != this) {
    bucket_.Swap(&other->bucket_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StoreInfoV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreInfoV1_descriptor_;
  metadata.reflection = StoreInfoV1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StoreChangeStreamAddedV1::kBucketFieldNumber;
const int StoreChangeStreamAddedV1::kStreamSetFieldNumber;
const int StoreChangeStreamAddedV1::kStreamFieldNumber;
const int StoreChangeStreamAddedV1::kLengthFieldNumber;
#endif  // !_MSC_VER

StoreChangeStreamAddedV1::StoreChangeStreamAddedV1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StoreChangeStreamAddedV1::InitAsDefaultInstance() {
}

StoreChangeStreamAddedV1::StoreChangeStreamAddedV1(const StoreChangeStreamAddedV1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StoreChangeStreamAddedV1::SharedCtor() {
  _cached_size_ = 0;
  bucket_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stream_set_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stream_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  length_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StoreChangeStreamAddedV1::~StoreChangeStreamAddedV1() {
  SharedDtor();
}

void StoreChangeStreamAddedV1::SharedDtor() {
  if (bucket_ != &::google::protobuf::internal::kEmptyString) {
    delete bucket_;
  }
  if (stream_set_ != &::google::protobuf::internal::kEmptyString) {
    delete stream_set_;
  }
  if (stream_ != &::google::protobuf::internal::kEmptyString) {
    delete stream_;
  }
  if (this != default_instance_) {
  }
}

void StoreChangeStreamAddedV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreChangeStreamAddedV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreChangeStreamAddedV1_descriptor_;
}

const StoreChangeStreamAddedV1& StoreChangeStreamAddedV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zippylog_2fprotocol_2eproto();  return *default_instance_;
}

StoreChangeStreamAddedV1* StoreChangeStreamAddedV1::default_instance_ = NULL;

StoreChangeStreamAddedV1* StoreChangeStreamAddedV1::New() const {
  return new StoreChangeStreamAddedV1;
}

void StoreChangeStreamAddedV1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bucket()) {
      if (bucket_ != &::google::protobuf::internal::kEmptyString) {
        bucket_->clear();
      }
    }
    if (has_stream_set()) {
      if (stream_set_ != &::google::protobuf::internal::kEmptyString) {
        stream_set_->clear();
      }
    }
    if (has_stream()) {
      if (stream_ != &::google::protobuf::internal::kEmptyString) {
        stream_->clear();
      }
    }
    length_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StoreChangeStreamAddedV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bucket = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bucket().data(), this->bucket().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stream_set;
        break;
      }
      
      // required string stream_set = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stream_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stream_set()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stream_set().data(), this->stream_set().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_stream;
        break;
      }
      
      // required string stream = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stream:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stream()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stream().data(), this->stream().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_length;
        break;
      }
      
      // optional uint64 length = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
          set_has_length();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StoreChangeStreamAddedV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string bucket = 1;
  if (has_bucket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->bucket(), output);
  }
  
  // required string stream_set = 2;
  if (has_stream_set()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream_set().data(), this->stream_set().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stream_set(), output);
  }
  
  // required string stream = 3;
  if (has_stream()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream().data(), this->stream().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->stream(), output);
  }
  
  // optional uint64 length = 4;
  if (has_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->length(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StoreChangeStreamAddedV1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string bucket = 1;
  if (has_bucket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bucket(), target);
  }
  
  // required string stream_set = 2;
  if (has_stream_set()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream_set().data(), this->stream_set().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stream_set(), target);
  }
  
  // required string stream = 3;
  if (has_stream()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream().data(), this->stream().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stream(), target);
  }
  
  // optional uint64 length = 4;
  if (has_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->length(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StoreChangeStreamAddedV1::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string bucket = 1;
    if (has_bucket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bucket());
    }
    
    // required string stream_set = 2;
    if (has_stream_set()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stream_set());
    }
    
    // required string stream = 3;
    if (has_stream()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stream());
    }
    
    // optional uint64 length = 4;
    if (has_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->length());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreChangeStreamAddedV1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StoreChangeStreamAddedV1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StoreChangeStreamAddedV1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StoreChangeStreamAddedV1::MergeFrom(const StoreChangeStreamAddedV1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bucket()) {
      set_bucket(from.bucket());
    }
    if (from.has_stream_set()) {
      set_stream_set(from.stream_set());
    }
    if (from.has_stream()) {
      set_stream(from.stream());
    }
    if (from.has_length()) {
      set_length(from.length());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StoreChangeStreamAddedV1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreChangeStreamAddedV1::CopyFrom(const StoreChangeStreamAddedV1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreChangeStreamAddedV1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void StoreChangeStreamAddedV1::Swap(StoreChangeStreamAddedV1* other) {
  if (other != this) {
    std::swap(bucket_, other->bucket_);
    std::swap(stream_set_, other->stream_set_);
    std::swap(stream_, other->stream_);
    std::swap(length_, other->length_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StoreChangeStreamAddedV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreChangeStreamAddedV1_descriptor_;
  metadata.reflection = StoreChangeStreamAddedV1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StoreChangeStreamDeletedV1::kBucketFieldNumber;
const int StoreChangeStreamDeletedV1::kStreamSetFieldNumber;
const int StoreChangeStreamDeletedV1::kStreamFieldNumber;
const int StoreChangeStreamDeletedV1::kLengthFieldNumber;
#endif  // !_MSC_VER

StoreChangeStreamDeletedV1::StoreChangeStreamDeletedV1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StoreChangeStreamDeletedV1::InitAsDefaultInstance() {
}

StoreChangeStreamDeletedV1::StoreChangeStreamDeletedV1(const StoreChangeStreamDeletedV1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StoreChangeStreamDeletedV1::SharedCtor() {
  _cached_size_ = 0;
  bucket_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stream_set_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stream_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  length_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StoreChangeStreamDeletedV1::~StoreChangeStreamDeletedV1() {
  SharedDtor();
}

void StoreChangeStreamDeletedV1::SharedDtor() {
  if (bucket_ != &::google::protobuf::internal::kEmptyString) {
    delete bucket_;
  }
  if (stream_set_ != &::google::protobuf::internal::kEmptyString) {
    delete stream_set_;
  }
  if (stream_ != &::google::protobuf::internal::kEmptyString) {
    delete stream_;
  }
  if (this != default_instance_) {
  }
}

void StoreChangeStreamDeletedV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreChangeStreamDeletedV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreChangeStreamDeletedV1_descriptor_;
}

const StoreChangeStreamDeletedV1& StoreChangeStreamDeletedV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zippylog_2fprotocol_2eproto();  return *default_instance_;
}

StoreChangeStreamDeletedV1* StoreChangeStreamDeletedV1::default_instance_ = NULL;

StoreChangeStreamDeletedV1* StoreChangeStreamDeletedV1::New() const {
  return new StoreChangeStreamDeletedV1;
}

void StoreChangeStreamDeletedV1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bucket()) {
      if (bucket_ != &::google::protobuf::internal::kEmptyString) {
        bucket_->clear();
      }
    }
    if (has_stream_set()) {
      if (stream_set_ != &::google::protobuf::internal::kEmptyString) {
        stream_set_->clear();
      }
    }
    if (has_stream()) {
      if (stream_ != &::google::protobuf::internal::kEmptyString) {
        stream_->clear();
      }
    }
    length_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StoreChangeStreamDeletedV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bucket = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bucket().data(), this->bucket().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stream_set;
        break;
      }
      
      // required string stream_set = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stream_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stream_set()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stream_set().data(), this->stream_set().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_stream;
        break;
      }
      
      // required string stream = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stream:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stream()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stream().data(), this->stream().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_length;
        break;
      }
      
      // optional uint64 length = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
          set_has_length();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StoreChangeStreamDeletedV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string bucket = 1;
  if (has_bucket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->bucket(), output);
  }
  
  // required string stream_set = 2;
  if (has_stream_set()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream_set().data(), this->stream_set().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stream_set(), output);
  }
  
  // required string stream = 3;
  if (has_stream()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream().data(), this->stream().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->stream(), output);
  }
  
  // optional uint64 length = 4;
  if (has_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->length(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StoreChangeStreamDeletedV1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string bucket = 1;
  if (has_bucket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bucket(), target);
  }
  
  // required string stream_set = 2;
  if (has_stream_set()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream_set().data(), this->stream_set().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stream_set(), target);
  }
  
  // required string stream = 3;
  if (has_stream()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream().data(), this->stream().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stream(), target);
  }
  
  // optional uint64 length = 4;
  if (has_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->length(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StoreChangeStreamDeletedV1::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string bucket = 1;
    if (has_bucket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bucket());
    }
    
    // required string stream_set = 2;
    if (has_stream_set()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stream_set());
    }
    
    // required string stream = 3;
    if (has_stream()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stream());
    }
    
    // optional uint64 length = 4;
    if (has_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->length());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreChangeStreamDeletedV1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StoreChangeStreamDeletedV1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StoreChangeStreamDeletedV1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StoreChangeStreamDeletedV1::MergeFrom(const StoreChangeStreamDeletedV1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bucket()) {
      set_bucket(from.bucket());
    }
    if (from.has_stream_set()) {
      set_stream_set(from.stream_set());
    }
    if (from.has_stream()) {
      set_stream(from.stream());
    }
    if (from.has_length()) {
      set_length(from.length());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StoreChangeStreamDeletedV1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreChangeStreamDeletedV1::CopyFrom(const StoreChangeStreamDeletedV1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreChangeStreamDeletedV1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void StoreChangeStreamDeletedV1::Swap(StoreChangeStreamDeletedV1* other) {
  if (other != this) {
    std::swap(bucket_, other->bucket_);
    std::swap(stream_set_, other->stream_set_);
    std::swap(stream_, other->stream_);
    std::swap(length_, other->length_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StoreChangeStreamDeletedV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreChangeStreamDeletedV1_descriptor_;
  metadata.reflection = StoreChangeStreamDeletedV1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StoreChangeStreamAppendedV1::kBucketFieldNumber;
const int StoreChangeStreamAppendedV1::kStreamSetFieldNumber;
const int StoreChangeStreamAppendedV1::kStreamFieldNumber;
const int StoreChangeStreamAppendedV1::kLengthFieldNumber;
#endif  // !_MSC_VER

StoreChangeStreamAppendedV1::StoreChangeStreamAppendedV1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StoreChangeStreamAppendedV1::InitAsDefaultInstance() {
}

StoreChangeStreamAppendedV1::StoreChangeStreamAppendedV1(const StoreChangeStreamAppendedV1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StoreChangeStreamAppendedV1::SharedCtor() {
  _cached_size_ = 0;
  bucket_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stream_set_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stream_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  length_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StoreChangeStreamAppendedV1::~StoreChangeStreamAppendedV1() {
  SharedDtor();
}

void StoreChangeStreamAppendedV1::SharedDtor() {
  if (bucket_ != &::google::protobuf::internal::kEmptyString) {
    delete bucket_;
  }
  if (stream_set_ != &::google::protobuf::internal::kEmptyString) {
    delete stream_set_;
  }
  if (stream_ != &::google::protobuf::internal::kEmptyString) {
    delete stream_;
  }
  if (this != default_instance_) {
  }
}

void StoreChangeStreamAppendedV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreChangeStreamAppendedV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreChangeStreamAppendedV1_descriptor_;
}

const StoreChangeStreamAppendedV1& StoreChangeStreamAppendedV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zippylog_2fprotocol_2eproto();  return *default_instance_;
}

StoreChangeStreamAppendedV1* StoreChangeStreamAppendedV1::default_instance_ = NULL;

StoreChangeStreamAppendedV1* StoreChangeStreamAppendedV1::New() const {
  return new StoreChangeStreamAppendedV1;
}

void StoreChangeStreamAppendedV1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bucket()) {
      if (bucket_ != &::google::protobuf::internal::kEmptyString) {
        bucket_->clear();
      }
    }
    if (has_stream_set()) {
      if (stream_set_ != &::google::protobuf::internal::kEmptyString) {
        stream_set_->clear();
      }
    }
    if (has_stream()) {
      if (stream_ != &::google::protobuf::internal::kEmptyString) {
        stream_->clear();
      }
    }
    length_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StoreChangeStreamAppendedV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bucket = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bucket().data(), this->bucket().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stream_set;
        break;
      }
      
      // required string stream_set = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stream_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stream_set()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stream_set().data(), this->stream_set().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_stream;
        break;
      }
      
      // required string stream = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stream:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stream()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stream().data(), this->stream().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_length;
        break;
      }
      
      // optional uint64 length = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
          set_has_length();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StoreChangeStreamAppendedV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string bucket = 1;
  if (has_bucket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->bucket(), output);
  }
  
  // required string stream_set = 2;
  if (has_stream_set()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream_set().data(), this->stream_set().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stream_set(), output);
  }
  
  // required string stream = 3;
  if (has_stream()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream().data(), this->stream().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->stream(), output);
  }
  
  // optional uint64 length = 4;
  if (has_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->length(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StoreChangeStreamAppendedV1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string bucket = 1;
  if (has_bucket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bucket(), target);
  }
  
  // required string stream_set = 2;
  if (has_stream_set()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream_set().data(), this->stream_set().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stream_set(), target);
  }
  
  // required string stream = 3;
  if (has_stream()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream().data(), this->stream().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stream(), target);
  }
  
  // optional uint64 length = 4;
  if (has_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->length(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StoreChangeStreamAppendedV1::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string bucket = 1;
    if (has_bucket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bucket());
    }
    
    // required string stream_set = 2;
    if (has_stream_set()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stream_set());
    }
    
    // required string stream = 3;
    if (has_stream()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stream());
    }
    
    // optional uint64 length = 4;
    if (has_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->length());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreChangeStreamAppendedV1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StoreChangeStreamAppendedV1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StoreChangeStreamAppendedV1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StoreChangeStreamAppendedV1::MergeFrom(const StoreChangeStreamAppendedV1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bucket()) {
      set_bucket(from.bucket());
    }
    if (from.has_stream_set()) {
      set_stream_set(from.stream_set());
    }
    if (from.has_stream()) {
      set_stream(from.stream());
    }
    if (from.has_length()) {
      set_length(from.length());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StoreChangeStreamAppendedV1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreChangeStreamAppendedV1::CopyFrom(const StoreChangeStreamAppendedV1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreChangeStreamAppendedV1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void StoreChangeStreamAppendedV1::Swap(StoreChangeStreamAppendedV1* other) {
  if (other != this) {
    std::swap(bucket_, other->bucket_);
    std::swap(stream_set_, other->stream_set_);
    std::swap(stream_, other->stream_);
    std::swap(length_, other->length_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StoreChangeStreamAppendedV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreChangeStreamAppendedV1_descriptor_;
  metadata.reflection = StoreChangeStreamAppendedV1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StoreChangeBucketAddedV1::kBucketFieldNumber;
#endif  // !_MSC_VER

StoreChangeBucketAddedV1::StoreChangeBucketAddedV1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StoreChangeBucketAddedV1::InitAsDefaultInstance() {
}

StoreChangeBucketAddedV1::StoreChangeBucketAddedV1(const StoreChangeBucketAddedV1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StoreChangeBucketAddedV1::SharedCtor() {
  _cached_size_ = 0;
  bucket_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StoreChangeBucketAddedV1::~StoreChangeBucketAddedV1() {
  SharedDtor();
}

void StoreChangeBucketAddedV1::SharedDtor() {
  if (bucket_ != &::google::protobuf::internal::kEmptyString) {
    delete bucket_;
  }
  if (this != default_instance_) {
  }
}

void StoreChangeBucketAddedV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreChangeBucketAddedV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreChangeBucketAddedV1_descriptor_;
}

const StoreChangeBucketAddedV1& StoreChangeBucketAddedV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zippylog_2fprotocol_2eproto();  return *default_instance_;
}

StoreChangeBucketAddedV1* StoreChangeBucketAddedV1::default_instance_ = NULL;

StoreChangeBucketAddedV1* StoreChangeBucketAddedV1::New() const {
  return new StoreChangeBucketAddedV1;
}

void StoreChangeBucketAddedV1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bucket()) {
      if (bucket_ != &::google::protobuf::internal::kEmptyString) {
        bucket_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StoreChangeBucketAddedV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bucket = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bucket().data(), this->bucket().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StoreChangeBucketAddedV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string bucket = 1;
  if (has_bucket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->bucket(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StoreChangeBucketAddedV1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string bucket = 1;
  if (has_bucket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bucket(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StoreChangeBucketAddedV1::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string bucket = 1;
    if (has_bucket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bucket());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreChangeBucketAddedV1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StoreChangeBucketAddedV1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StoreChangeBucketAddedV1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StoreChangeBucketAddedV1::MergeFrom(const StoreChangeBucketAddedV1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bucket()) {
      set_bucket(from.bucket());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StoreChangeBucketAddedV1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreChangeBucketAddedV1::CopyFrom(const StoreChangeBucketAddedV1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreChangeBucketAddedV1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void StoreChangeBucketAddedV1::Swap(StoreChangeBucketAddedV1* other) {
  if (other != this) {
    std::swap(bucket_, other->bucket_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StoreChangeBucketAddedV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreChangeBucketAddedV1_descriptor_;
  metadata.reflection = StoreChangeBucketAddedV1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StoreChangeBucketDeletedV1::kBucketFieldNumber;
#endif  // !_MSC_VER

StoreChangeBucketDeletedV1::StoreChangeBucketDeletedV1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StoreChangeBucketDeletedV1::InitAsDefaultInstance() {
}

StoreChangeBucketDeletedV1::StoreChangeBucketDeletedV1(const StoreChangeBucketDeletedV1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StoreChangeBucketDeletedV1::SharedCtor() {
  _cached_size_ = 0;
  bucket_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StoreChangeBucketDeletedV1::~StoreChangeBucketDeletedV1() {
  SharedDtor();
}

void StoreChangeBucketDeletedV1::SharedDtor() {
  if (bucket_ != &::google::protobuf::internal::kEmptyString) {
    delete bucket_;
  }
  if (this != default_instance_) {
  }
}

void StoreChangeBucketDeletedV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreChangeBucketDeletedV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreChangeBucketDeletedV1_descriptor_;
}

const StoreChangeBucketDeletedV1& StoreChangeBucketDeletedV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zippylog_2fprotocol_2eproto();  return *default_instance_;
}

StoreChangeBucketDeletedV1* StoreChangeBucketDeletedV1::default_instance_ = NULL;

StoreChangeBucketDeletedV1* StoreChangeBucketDeletedV1::New() const {
  return new StoreChangeBucketDeletedV1;
}

void StoreChangeBucketDeletedV1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bucket()) {
      if (bucket_ != &::google::protobuf::internal::kEmptyString) {
        bucket_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StoreChangeBucketDeletedV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bucket = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bucket().data(), this->bucket().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StoreChangeBucketDeletedV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string bucket = 2;
  if (has_bucket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->bucket(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StoreChangeBucketDeletedV1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string bucket = 2;
  if (has_bucket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bucket(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StoreChangeBucketDeletedV1::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string bucket = 2;
    if (has_bucket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bucket());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreChangeBucketDeletedV1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StoreChangeBucketDeletedV1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StoreChangeBucketDeletedV1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StoreChangeBucketDeletedV1::MergeFrom(const StoreChangeBucketDeletedV1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bucket()) {
      set_bucket(from.bucket());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StoreChangeBucketDeletedV1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreChangeBucketDeletedV1::CopyFrom(const StoreChangeBucketDeletedV1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreChangeBucketDeletedV1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void StoreChangeBucketDeletedV1::Swap(StoreChangeBucketDeletedV1* other) {
  if (other != this) {
    std::swap(bucket_, other->bucket_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StoreChangeBucketDeletedV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreChangeBucketDeletedV1_descriptor_;
  metadata.reflection = StoreChangeBucketDeletedV1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StoreChangeStreamSetAddedV1::kBucketFieldNumber;
const int StoreChangeStreamSetAddedV1::kStreamSetFieldNumber;
#endif  // !_MSC_VER

StoreChangeStreamSetAddedV1::StoreChangeStreamSetAddedV1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StoreChangeStreamSetAddedV1::InitAsDefaultInstance() {
}

StoreChangeStreamSetAddedV1::StoreChangeStreamSetAddedV1(const StoreChangeStreamSetAddedV1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StoreChangeStreamSetAddedV1::SharedCtor() {
  _cached_size_ = 0;
  bucket_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stream_set_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StoreChangeStreamSetAddedV1::~StoreChangeStreamSetAddedV1() {
  SharedDtor();
}

void StoreChangeStreamSetAddedV1::SharedDtor() {
  if (bucket_ != &::google::protobuf::internal::kEmptyString) {
    delete bucket_;
  }
  if (stream_set_ != &::google::protobuf::internal::kEmptyString) {
    delete stream_set_;
  }
  if (this != default_instance_) {
  }
}

void StoreChangeStreamSetAddedV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreChangeStreamSetAddedV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreChangeStreamSetAddedV1_descriptor_;
}

const StoreChangeStreamSetAddedV1& StoreChangeStreamSetAddedV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zippylog_2fprotocol_2eproto();  return *default_instance_;
}

StoreChangeStreamSetAddedV1* StoreChangeStreamSetAddedV1::default_instance_ = NULL;

StoreChangeStreamSetAddedV1* StoreChangeStreamSetAddedV1::New() const {
  return new StoreChangeStreamSetAddedV1;
}

void StoreChangeStreamSetAddedV1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bucket()) {
      if (bucket_ != &::google::protobuf::internal::kEmptyString) {
        bucket_->clear();
      }
    }
    if (has_stream_set()) {
      if (stream_set_ != &::google::protobuf::internal::kEmptyString) {
        stream_set_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StoreChangeStreamSetAddedV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bucket = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bucket().data(), this->bucket().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stream_set;
        break;
      }
      
      // required string stream_set = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stream_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stream_set()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stream_set().data(), this->stream_set().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StoreChangeStreamSetAddedV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string bucket = 1;
  if (has_bucket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->bucket(), output);
  }
  
  // required string stream_set = 2;
  if (has_stream_set()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream_set().data(), this->stream_set().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stream_set(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StoreChangeStreamSetAddedV1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string bucket = 1;
  if (has_bucket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bucket(), target);
  }
  
  // required string stream_set = 2;
  if (has_stream_set()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream_set().data(), this->stream_set().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stream_set(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StoreChangeStreamSetAddedV1::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string bucket = 1;
    if (has_bucket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bucket());
    }
    
    // required string stream_set = 2;
    if (has_stream_set()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stream_set());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreChangeStreamSetAddedV1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StoreChangeStreamSetAddedV1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StoreChangeStreamSetAddedV1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StoreChangeStreamSetAddedV1::MergeFrom(const StoreChangeStreamSetAddedV1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bucket()) {
      set_bucket(from.bucket());
    }
    if (from.has_stream_set()) {
      set_stream_set(from.stream_set());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StoreChangeStreamSetAddedV1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreChangeStreamSetAddedV1::CopyFrom(const StoreChangeStreamSetAddedV1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreChangeStreamSetAddedV1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void StoreChangeStreamSetAddedV1::Swap(StoreChangeStreamSetAddedV1* other) {
  if (other != this) {
    std::swap(bucket_, other->bucket_);
    std::swap(stream_set_, other->stream_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StoreChangeStreamSetAddedV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreChangeStreamSetAddedV1_descriptor_;
  metadata.reflection = StoreChangeStreamSetAddedV1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StoreChangeStreamSetDeletedV1::kBucketFieldNumber;
const int StoreChangeStreamSetDeletedV1::kStreamSetFieldNumber;
#endif  // !_MSC_VER

StoreChangeStreamSetDeletedV1::StoreChangeStreamSetDeletedV1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StoreChangeStreamSetDeletedV1::InitAsDefaultInstance() {
}

StoreChangeStreamSetDeletedV1::StoreChangeStreamSetDeletedV1(const StoreChangeStreamSetDeletedV1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StoreChangeStreamSetDeletedV1::SharedCtor() {
  _cached_size_ = 0;
  bucket_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stream_set_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StoreChangeStreamSetDeletedV1::~StoreChangeStreamSetDeletedV1() {
  SharedDtor();
}

void StoreChangeStreamSetDeletedV1::SharedDtor() {
  if (bucket_ != &::google::protobuf::internal::kEmptyString) {
    delete bucket_;
  }
  if (stream_set_ != &::google::protobuf::internal::kEmptyString) {
    delete stream_set_;
  }
  if (this != default_instance_) {
  }
}

void StoreChangeStreamSetDeletedV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreChangeStreamSetDeletedV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreChangeStreamSetDeletedV1_descriptor_;
}

const StoreChangeStreamSetDeletedV1& StoreChangeStreamSetDeletedV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zippylog_2fprotocol_2eproto();  return *default_instance_;
}

StoreChangeStreamSetDeletedV1* StoreChangeStreamSetDeletedV1::default_instance_ = NULL;

StoreChangeStreamSetDeletedV1* StoreChangeStreamSetDeletedV1::New() const {
  return new StoreChangeStreamSetDeletedV1;
}

void StoreChangeStreamSetDeletedV1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bucket()) {
      if (bucket_ != &::google::protobuf::internal::kEmptyString) {
        bucket_->clear();
      }
    }
    if (has_stream_set()) {
      if (stream_set_ != &::google::protobuf::internal::kEmptyString) {
        stream_set_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StoreChangeStreamSetDeletedV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bucket = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bucket().data(), this->bucket().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stream_set;
        break;
      }
      
      // required string stream_set = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stream_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stream_set()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stream_set().data(), this->stream_set().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StoreChangeStreamSetDeletedV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string bucket = 1;
  if (has_bucket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->bucket(), output);
  }
  
  // required string stream_set = 2;
  if (has_stream_set()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream_set().data(), this->stream_set().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stream_set(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StoreChangeStreamSetDeletedV1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string bucket = 1;
  if (has_bucket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bucket(), target);
  }
  
  // required string stream_set = 2;
  if (has_stream_set()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stream_set().data(), this->stream_set().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stream_set(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StoreChangeStreamSetDeletedV1::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string bucket = 1;
    if (has_bucket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bucket());
    }
    
    // required string stream_set = 2;
    if (has_stream_set()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stream_set());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreChangeStreamSetDeletedV1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StoreChangeStreamSetDeletedV1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StoreChangeStreamSetDeletedV1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StoreChangeStreamSetDeletedV1::MergeFrom(const StoreChangeStreamSetDeletedV1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bucket()) {
      set_bucket(from.bucket());
    }
    if (from.has_stream_set()) {
      set_stream_set(from.stream_set());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StoreChangeStreamSetDeletedV1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreChangeStreamSetDeletedV1::CopyFrom(const StoreChangeStreamSetDeletedV1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreChangeStreamSetDeletedV1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void StoreChangeStreamSetDeletedV1::Swap(StoreChangeStreamSetDeletedV1* other) {
  if (other != this) {
    std::swap(bucket_, other->bucket_);
    std::swap(stream_set_, other->stream_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StoreChangeStreamSetDeletedV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreChangeStreamSetDeletedV1_descriptor_;
  metadata.reflection = StoreChangeStreamSetDeletedV1_reflection_;
  return metadata;
}



bool StreamInfoV1::add_to_envelope(::zippylog::Envelope *envelope) {
    return envelope->AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StreamInfoV1::add_to_envelope(::zippylog::Envelope &envelope) {
    return envelope.AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StreamSetInfoV1::add_to_envelope(::zippylog::Envelope *envelope) {
    return envelope->AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StreamSetInfoV1::add_to_envelope(::zippylog::Envelope &envelope) {
    return envelope.AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool BucketInfoV1::add_to_envelope(::zippylog::Envelope *envelope) {
    return envelope->AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool BucketInfoV1::add_to_envelope(::zippylog::Envelope &envelope) {
    return envelope.AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreInfoV1::add_to_envelope(::zippylog::Envelope *envelope) {
    return envelope->AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreInfoV1::add_to_envelope(::zippylog::Envelope &envelope) {
    return envelope.AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreChangeStreamAddedV1::add_to_envelope(::zippylog::Envelope *envelope) {
    return envelope->AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreChangeStreamAddedV1::add_to_envelope(::zippylog::Envelope &envelope) {
    return envelope.AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreChangeStreamDeletedV1::add_to_envelope(::zippylog::Envelope *envelope) {
    return envelope->AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreChangeStreamDeletedV1::add_to_envelope(::zippylog::Envelope &envelope) {
    return envelope.AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreChangeStreamAppendedV1::add_to_envelope(::zippylog::Envelope *envelope) {
    return envelope->AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreChangeStreamAppendedV1::add_to_envelope(::zippylog::Envelope &envelope) {
    return envelope.AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreChangeBucketAddedV1::add_to_envelope(::zippylog::Envelope *envelope) {
    return envelope->AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreChangeBucketAddedV1::add_to_envelope(::zippylog::Envelope &envelope) {
    return envelope.AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreChangeBucketDeletedV1::add_to_envelope(::zippylog::Envelope *envelope) {
    return envelope->AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreChangeBucketDeletedV1::add_to_envelope(::zippylog::Envelope &envelope) {
    return envelope.AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreChangeStreamSetAddedV1::add_to_envelope(::zippylog::Envelope *envelope) {
    return envelope->AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreChangeStreamSetAddedV1::add_to_envelope(::zippylog::Envelope &envelope) {
    return envelope.AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreChangeStreamSetDeletedV1::add_to_envelope(::zippylog::Envelope *envelope) {
    return envelope->AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}

bool StoreChangeStreamSetDeletedV1::add_to_envelope(::zippylog::Envelope &envelope) {
    return envelope.AddMessage(*this, zippylog_namespace, zippylog_enumeration);
}
// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace zippylog

// @@protoc_insertion_point(global_scope)
